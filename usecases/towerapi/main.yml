# Copyright (c) IBM Corporation 2019, 2021
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)

---
- hosts: localhost
  name: Prompt input parameters, press Enter to accept default values.
  gather_facts: false
  vars_prompt:
    - name: prefix
      prompt: Enter your naming prefix for this project
      default: "sample"
      private: false

    - name: pre_cleanup
      prompt: Whether to clean up before running (Yes/No)
      default: "Yes"
      private: false

    - name: tower_url
      prompt: Enter your Ansible Tower's URL
      default: "https://<your-ansible-tower-url>"
      private: false

    - name: tower_username
      prompt: Enter your Ansible Tower's user name
      default: "admin"
      private: false

    - name: tower_password
      prompt: Enter your Ansible Tower's password
      private: true
      confirm: true
      default: ""

    - name: git_url
      prompt: Enter your SCM repository's URL
      default: "https://github.com/IBM/ansible-for-i-usecases.git"
      private: false

    - name: playbook_names
      prompt: Enter your playbooks' names in order (use space as separator)
      default: >
        usecases/cicd-tower/build_start.yml
        usecases/cicd-tower/provision_vm.yml
        usecases/cicd-tower/add_build_system.yml
        usecases/cicd-tower/build.yml
        usecases/cicd-tower/post_build_actions.yml
        usecases/cicd-tower/cleanup.yml
      private: false

    - name: git_repo_url
      prompt: Enter the source code repository's URL for your project
      default: "https://github.com/IBM/cicd-source.git"
      private: false

    - name: git_branch
      prompt: Enter the branch of the source code repository for your project
      default: "master"
      private: false

    - name: github_user_name
      prompt: Enter your github user name
      default: ""
      private: false

    - name: github_access_token
      prompt: Enter the personal access token generated from github, not neccessary when accessing public repositories.
      private: true
      default: ""

    - name: build_with_stmfs
      prompt: Are you building your app with STMFs or PF members? Yes for SMTFs, No for PF members. (Yes/No)
      default: "Yes"
      private: false

    - name: cleanup
      prompt: Do you want to do clean up after each build? (Yes/No)
      default: "Yes"
      private: false

    - name: provision
      prompt: Do you want to provision a new VM for building? (Yes/No)
      default: "Yes"
      private: false

    - name: build_system_user
      prompt: Enter your IBM i build machine user name
      default: ""
      private: false

    - name: build_system_pass
      prompt: Enter your IBM i build machine user password
      private: true
      confirm: true
      default: ""

  vars:
    tower_api_url: "{{ tower_url | regex_replace('\\/$', '') }}/api/v2"
    playbooks: "{{ playbook_names.split() }}"

  collections:
    - ibm.power_ibmi

  tasks:
    - set_fact:
        credential_name: "{{ prefix }}_machine_cred"
        inventory_name: "{{ prefix }}_systems"
        project_name: "{{ prefix }}_project"
        template_name: "{{ prefix }}_template"
        workflow_name: "{{ prefix }}_workflow"
        github_token_name: "{{ prefix }}_github_token"
        get_result_retry: 300
        get_result_retry_delay: 10

    - block:
        - pause:
            prompt: |
              You didn't choose to provision a new VM for building,
              please enter your build machine IP address here (use space as separator for multiple hosts)
          register: host_name
      when: not provision|bool

    - block:
        - pause:
            prompt: "Enter powervc host for provisioning"
          register: powervc_host

        - pause:
            prompt: "Enter powervc admin for provisioning"
          register: powervc_admin

        - pause:
            prompt: "Enter powervc admin password for provisioning"
            echo: false
          register: powervc_admin_password

        - pause:
            prompt: "Enter the project name in powervc host for provisioning"
          register: powervc_project

        - pause:
            prompt: "Enter the project domain name in powervc host for provisioning"
          register: project_domain

        - pause:
            prompt: "Enter the user_domain in powervc host for provisioning"
          register: user_domain

        - pause:
            prompt: "Do you want to verify cert in provisioning? (Yes/No)"
          register: verify_cert

        - pause:
            prompt: "Enter the Name or ID of a network to attach this instance to"
          register: network

        - pause:
            prompt: "Enter the image name or id in powervc host for provisioning"
          register: image_name_or_id

        - pause:
            prompt: "Enter the flavor name or id in powervc host for provisioning"
          register: flavor_name_or_id

        - pause:
            prompt: "Enter the timeout(seconds) value of provisioning VM in powervc host"
          register: deploy_timeout

        - name: set_fact
          set_fact:
            network: '{{ network.user_input }}'
            deploy_userdata_value: |
              {%- raw -%}#!/bin/sh
              mkdir /home/{{ build_system_user }}
              system "CRTUSRPRF USRPRF({{ build_system_user }}) PASSWORD({{ build_system_pass }}) USRCLS(*SECOFR) HOMEDIR('/home/{{ build_system_user }}')"
              system "chgtcpsvr svrspcval(*sshd) autostart(*yes)"
              system "strtcpsvr *sshd"
              {% endraw %}
      when: provision|bool

    - block:
        - name: Step 1 - login and get a Token
          include: login.yml

        - name: Step 2 - add a new inventory
          include: add_inventory.yml

        - block:
            - name: Step 3 - add new hosts
              include: add_hosts.yml

            - name: Step 4 - add a host access token
              include: add_credential.yml
          when: not provision|bool

        - block:
            - name: Step 5 - add a github access token
              include: add_github_token.yml
          when: github_access_token != ""

        - name: Step 6 - add a new project
          include: add_project.yml

        - name: Step 7 - add a workflow template
          include: add_workflow.yml

        - name: Step 8 - add job templates to the workflow
          include_tasks: add_job.yml
          loop: "{{ playbooks }}"
          loop_control:
            loop_var: playbook

        - name: Step 9 - run the workflow
          include: run_workflow.yml

        - name: Step 10 - show the result
          include: show_result.yml

        - name: Step 11 - clean up used tokens
          include: cleanup.yml
