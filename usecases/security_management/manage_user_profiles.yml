# Copyright (c) IBM Corporation 2019, 2020
# Apache License, Version 2.0 (see https://opensource.org/licenses/Apache-2.0)
---
- hosts: all
  gather_facts: false
  collections:
    - ibm.power_ibmi

  vars:
    become_user_name: null
    become_user_password: null

  tasks:
    - name: 3.1 PUBLIC authority to all user profiles should be EXCLUDE with the following exceptions
            QDBSHR QDBSHRDO QTMPLPD
      ibmi_sql_query:
        sql: "SELECT ALL
        SYS_ONAME, OBJTYPE, USER_NAME, OBJ_AUTH
        FROM QSYS2.OBJ_PRIV T01
        WHERE OBJTYPE = '*USRPRF'
        AND SYS_ONAME NOT IN ('QDBSHR', 'QDBSHRDO', 'QTMPLPD')
        AND USER_NAME = '*PUBLIC'
        AND OBJ_AUTH <> '*EXCLUDE'"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      ignore_errors: true

    - name: 3.2 All Private authorities to all user profiles other than the owner's and the profile itself should be removed.
      ibmi_sql_query:
        sql: "SELECT SYS_ONAME, OBJTYPE, USER_NAME, OBJ_AUTH FROM QSYS2.OBJ_PRIV LEFT OUTER JOIN QSYS2.GROUPLIST
        ON SYS_ONAME = GROUPNAME WHERE OBJTYPE = '*USRPRF' AND SYS_ONAME <> USER_NAME AND USER_NAME <> OWNER
        AND USER_NAME <> '*PUBLIC'
        AND USERNAME IS NULL
        AND SYS_ONAME CONCAT USER_NAME NOT IN
        ('QGATEQSNADS', 'QMQMQMQMADM', 'QMSFQTCP',
        'QSPLJOBQSPL', 'QTCPQMSF', 'QTMHHTTPQCLUSTER')"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      ignore_errors: true

    - name: 3.3 All IBM Supplied Profiles shall be owned by QSYS with the following exceptions
            QFAXMSF shall be owned by QAUTPROF
            QRDARS400xx shall be owned by QRDARS400
            QTIVOLI, QTIVROOT and QTIVUSER shall be owned by QTIVOLI
            Non-IBM (user created) profiles shall be owned by QSECOFR or QSYS
      ibmi_sql_query:
        sql: "SELECT ALL SYS_ONAME, OBJTYPE, OWNER FROM QSYS2.OBJ_PRIV
              WHERE OBJTYPE = '*USRPRF' AND USER_NAME = '*PUBLIC'
              AND OWNER NOT IN ('QSECOFR', 'QSYS')"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      register: profile_ownership_check
      ignore_errors: true

    - name: Get the result of the checking for user profile ownership
      debug: msg={{ profile_ownership_check.row }}
      ignore_errors: true


    - name: Default passwords provide an opportunity for someone to enter your system,
            if someone knows your policy for assigning profile names and knows that a new person is joining
            your organization. Additionally, accounts with default passwords are often used
            for shared (non- unique) accounts. Tell the new user the password confidentially, such as
            in a "Welcome to the System" letter that outlines your security policies. Require the user to change
            the password the first time that the user signs on by setting the user profile to PWDEXP(*YES)
      ibmi_sql_query:
        sql: "SELECT ALL
              USER_NAME, STATUS, DFTPWD, PWDEXP
              FROM QSYS2.USER_INFO T01
              WHERE DFTPWD = 'YES'"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      ignore_errors: true


    - name: 3.7 Remove/disable inactive user profiles within 90 days.
      ibmi_sql_query:
        sql: "SELECT ALL
                          USER_NAME, STATUS, LASTUSED
                          FROM QSYS2.USER_INFO T01
                          WHERE STATUS = '*ENABLED'
                          AND LASTUSED <= CURRENT_TIMESTAMP - 90 DAYS
                          OR STATUS = '*ENABLED'
                          AND LASTUSED IS NULL"
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
        expected_row_count: 0
      register: profile_last_used_time
      tags: inactive_profile
      ignore_errors: true

    - name: Get Remove/disable inactive user profiles within 90 days.
      debug: msg={{ profile_last_used_time.row }}
      tags: inactive_profile
      ignore_errors: true


    - name: 3.8 User Profiles with non-expiring passwords are never required to change their
            Service accounts may be excluded from the audit and remediation.
            A service account is a user account that is created explicitly to provide a security context
            for automated system and application services running on the system.
            Service accounts should be configured with a non-trivial, complex password that is used
            in an automated service process and never used interactively.
            Service accounts should be documented and their Password expiration interval should be set to *NOMAX.
            A process should then be documented and executed to periodically change their passwords manually
      ibmi_sql_query:
        sql: "SELECT ALL
              USER_NAME, STATUS, PWDEXPITV, LASTUSED
              FROM QSYS2.USER_INFO T01
              WHERE PWDEXPITV = -1"
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
        expected_row_count: 0
      register: non_expiring_pwd
      tags: non_expiring_pwd
      ignore_errors: true

    - name: Get User Profiles with non-expiring passwords are never required to change their password
      debug: msg={{ non_expiring_pwd.row }}
      tags: non_expiring_pwd
      ignore_errors: true


    - name: 3.9 User Profiles with command line access can run commands they are authorized to from a command line.
      ibmi_sql_query:
        sql: "SELECT ALL
              USER_NAME, STATUS, LMTCPB, SPCAUT
              FROM QSYS2.USER_INFO T01
              WHERE LMTCPB <> '*YES'"
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
        expected_row_count: 0
      register: run_cmd_via_cmd_line
      tags: run_cmd_line
      ignore_errors: true

    - name: Get User Profiles with command line access can run commands they are authorized to from a command line.
      debug: msg={{ run_cmd_via_cmd_line.row }}
      tags: run_cmd_line
      ignore_errors: true


    - name: 3.10 This section contains information about the IBM-Supplied user profiles that are shipped with
            the system and Licensed Program Products. These profiles are used as object owners for various
            system functions. Some system functions also run under specific IBM-supplied user profiles.
      ibmi_sql_query:
        sql: "SELECT AUTHORIZATION_NAME, NO_PASSWORD_INDICATOR, STATUS,
              USER_CLASS_NAME, INITIAL_PROGRAM_NAME,
              LIMIT_CAPABILITIES, SPECIAL_AUTHORITIES
              FROM QSYS2.USER_INFO WHERE AUTHORIZATION_NAME LIKE 'Q%' AND
              NO_PASSWORD_INDICATOR = 'NO' OR AUTHORIZATION_NAME LIKE 'Q%'
              AND STATUS = '*DISABLED' OR AUTHORIZATION_NAME LIKE 'Q%'
              AND USER_CLASS_NAME <> '*USER' OR AUTHORIZATION_NAME LIKE 'Q%' AND
              INITIAL_PROGRAM_NAME <> '*NONE' OR AUTHORIZATION_NAME LIKE 'Q%' AND
              LIMIT_CAPABILITIES <> '*NO' OR AUTHORIZATION_NAME LIKE 'Q%' AND SPECIAL_AUTHORITIES <> '*NONE'"
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
        expected_row_count: 0
      register: ibm_supplied_user
      tags: check_ibm_supplied_user
      ignore_errors: true

    - name: Get User Profiles with command line access can run commands they are authorized to from a command line.
      debug: msg={{ ibm_supplied_user.row }}
      tags: check_ibm_supplied_user
      ignore_errors: true

    - name: 3.11 Group profiles should not have a password as they are usually not associated with a unique account.
      ibmi_sql_query:
        sql: "SELECT All
              T01.GROUPNAME, T02.NOPWD
              FROM QSYS2.GROUPLIST T01 INNER JOIN
              QSYS2.USER_INFO T02
              ON T01.GROUPNAME = T02.USER_NAME
              WHERE T02.NOPWD = 'NO'"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      tags: check_group_profiles
      ignore_errors: true


    - name: 5.1 QSECOFR Profile Shall Be DISABLED
      ibmi_sql_query:
        sql: "SELECT * FROM QSYS2.USER_INFO
              WHERE USER_NAME = 'QSECOFR' AND STATUS = '*ENABLED'"
        expected_row_count: 0
        become_user: '{{ become_user_name }}'
        become_user_password: '{{ become_user_password }}'
      tags: disable_qsecofr
      ignore_errors: true

    #  - name: 5.1 QSECOFR Profile Shall Be DISABLED
    #    ibmi_user_compliance_check:
    #      users:
    #        - 'QSECOFR'
    #      fields:
    #        - {'name':'status', 'expect':['*DISABLED']}
    #      become_user: '{{ become_user_name }}'
    #      become_user_password: '{{ become_user_password }}'
    #    tags: disable_qsecofr

    - name: 5.2 QSECOFR Shall Not be Configured as a Group Profile
      ibmi_cl_command:
        cmd: DSPUSRPRF USRPRF(QSECOFR) TYPE(*GRPMBR)
        joblog: true
      register: dspusrprf_group
      tags: dspusrprf_group
      ignore_errors: true

    - name: QSECOFR Shall Not be Configured as a Group Profile
      assert:
        that:
          - "'CPF2257: User profile QSECOFR not a group profile' in dspusrprf_group.stderr"
      tags: dspusrprf_group
      ignore_errors: true
